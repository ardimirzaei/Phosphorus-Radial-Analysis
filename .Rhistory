setwd("D:/People/Bryson/PhosphateAnalysis")
library(corrplot)
library(ggplot2)
library(dplyr)
library(psych) # for describeby
library(car) #for leven's test
source('Scripts/Phos_Load_and_Preprocess.R')
source('Scripts/Phos_Alpha_vs_RMSD.R')
head(df)
df %>%
mutate(nl =   apply(df[c("n.1.", "n.2.", "n.3.", "n.4.")], 1, paste,collapse="")) %>%
filter(ATOM == 'P') %>%
group_by(drug, compound, alphavalue) %>%
arrange(RMSD_MAP) %>%
slice(1:5)
df %>%
mutate(nl =   apply(df[c("n.1.", "n.2.", "n.3.", "n.4.")], 1, paste,collapse="")) %>%
filter(ATOM == 'P') %>%
group_by(drug, compound, alphavalue) %>%
arrange(RMSD_MAP) %>%
slice(1:5) %>%
select(drug, compound, alphavalue, nl, RMSD_MAP)
library(flextable)
install.packages('flextable')
df %>%
mutate(nl =   apply(df[c("n.1.", "n.2.", "n.3.", "n.4.")], 1, paste,collapse="")) %>%
filter(ATOM == 'P') %>%
group_by(drug, compound, alphavalue) %>%
arrange(RMSD_MAP) %>%
slice(1:5) %>%
select(drug, compound, alphavalue, nl, RMSD_MAP) %>%
flextable()
library(flextable)
df %>%
mutate(nl =   apply(df[c("n.1.", "n.2.", "n.3.", "n.4.")], 1, paste,collapse="")) %>%
filter(ATOM == 'P') %>%
group_by(drug, compound, alphavalue) %>%
arrange(RMSD_MAP) %>%
slice(1:5) %>%
select(drug, compound, alphavalue, nl, RMSD_MAP) %>%
flextable()
df %>%
mutate(nl =   apply(df[c("n.1.", "n.2.", "n.3.", "n.4.")], 1, paste,collapse="")) %>%
filter(ATOM == 'P') %>%
group_by(drug, compound, alphavalue) %>%
arrange(RMSD_MAP) %>%
slice(1:5) %>%
select(drug, compound, alphavalue, nl, RMSD_MAP) %>%
flextable() %>%
theme_box() %>%  merge_v(j = ~drug)
df %>%
mutate(nl =   apply(df[c("n.1.", "n.2.", "n.3.", "n.4.")], 1, paste,collapse="")) %>%
filter(ATOM == 'P') %>%
group_by(drug, compound, alphavalue) %>%
arrange(RMSD_MAP) %>%
slice(1:5) %>%
select(drug, compound, alphavalue, nl, RMSD_MAP) %>%
flextable() %>%
theme_box() %>%  merge_v(j = c('drug', 'compound', 'alphavalue'))
rmarkdown::render(input = 'Scripts/Phos_Top5Bottom5_Tables.rmd',
output_file = paste0('TopAndBottom_Tables_',format(Sys.time(), '%Y%m%d'),'.docx'),
output_dir = 'Analysis/')
# devtools::install_github("davidgohel/officedown")
library(officedown)
rmarkdown::render(input = 'Scripts/Phos_Top5Bottom5_Tables.rmd',
output_file = paste0('TopAndBottom_Tables_',format(Sys.time(), '%Y%m%d'),'.docx'),
output_dir = 'Analysis/')
rmarkdown::render(input = 'Scripts/Phos_Top5Bottom5_Tables.rmd',
output_file = paste0('TopAndBottom_Tables_',format(Sys.time(), '%Y%m%d'),'.docx'),
output_dir = 'Analysis/')
rmarkdown::render(input = 'Scripts/Phos_Top5Bottom5_Tables.rmd',
output_file = paste0('TopAndBottom_Tables_',format(Sys.time(), '%Y%m%d'),'.docx'),
output_dir = 'Analysis/')
rmarkdown::render(input = 'Scripts/Phos_Top5Bottom5_Tables.rmd',
output_file = paste0('TopAndBottom_Tables_',format(Sys.time(), '%Y%m%d'),'.docx'),
output_dir = 'Analysis/')
