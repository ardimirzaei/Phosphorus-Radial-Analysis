library(corrplot)
library(ggplot2)
library(dplyr)
library(psych) # for describeby
library(car) #for leven's test
library(flextable)
# devtools::install_github("davidgohel/officedown")
library(officedown)
# Filtering for P atom from here.
source('Scripts/Phos_Load_and_Preprocess.R')
setwd("D:/People/Bryson/PhosphateAnalysis")
# Filtering for P atom from here.
source('Scripts/Phos_Load_and_Preprocess.R')
# source('Scripts/Gather_and_zip_files.R')
list.files(pattern = "*bestnl.csv", recursive = TRUE)
18*3*3
162*2
df$compound
df$drug
unique(df$drug)
20*6
20*3*3
# Filtering for P atom from here.
source('Scripts/Phos_Load_and_Preprocess.R')
source('Scripts/Phos_Alpha_vs_RMSD.R')
# Filtering for P atom from here.
source('Scripts/Phos_Load_and_Preprocess.R')
source('Scripts/Phos_Alpha_vs_RMSD.R')
source('Scripts/Phos_Alpha_vs_RMSD.R')
g <- ggplot(df,aes(y=RMSD_MAP, x=as.factor(alphavalue), fill=as.factor(alphavalue)))+
stat_summary(fun="mean", geom="bar",position="dodge")+
stat_summary(fun.data = mean_se, geom = "errorbar", position="dodge",width=.8) +
coord_cartesian(ylim = c(0.0382,0.039)) +
xlab("Alpha Value") +
ylab("RMSD MAP") +
theme_minimal() +
theme(legend.position = "none")
g
g <- ggplot(df,aes(y=RMSD_MAP, x=as.factor(alphavalue), fill=as.factor(alphavalue)))+
stat_summary(fun="mean", geom="bar",position="dodge")+
stat_summary(fun.data = mean_se, geom = "errorbar", position="dodge",width=.8) +
coord_cartesian(ylim = c(0.0380,0.0388)) +
xlab("Alpha Value") +
ylab("RMSD MAP") +
theme_minimal() +
theme(legend.position = "none")
g
ggplot(df,aes(y=KAPPA_HAT, x=as.factor(alphavalue), fill=as.factor(alphavalue)))+
stat_summary(fun="mean", geom="bar",position="dodge")+
stat_summary(fun.data = mean_se, geom = "errorbar", position="dodge",width=.8) +
coord_cartesian(ylim = c(0.88,0.98)) +
xlab("Alpha Value") +
theme_minimal() +
ylab("Kappa Hat Value") +
theme(legend.position = "none")
ggplot(df,aes(y=RMSD_MAP, x=as.factor(alphavalue), fill=as.factor(alphavalue)))+
stat_summary(fun="mean", geom="bar",position="dodge")+
stat_summary(fun.data = mean_se, geom = "errorbar", position="dodge",width=.8) +
coord_cartesian(ylim = c(0.0380,0.0386)) +
xlab("Alpha Value") +
ylab("RMSD MAP") +
theme_minimal() +
theme(legend.position = "none")
ggplot(df,aes(y=RMSD_MAP, x=as.factor(alphavalue), fill=as.factor(alphavalue)))+
stat_summary(fun="mean", geom="bar",position="dodge")+
stat_summary(fun.data = mean_se, geom = "errorbar", position="dodge",width=.8) +
coord_cartesian(ylim = c(0.0380,0.0384)) +
xlab("Alpha Value") +
ylab("RMSD MAP") +
theme_minimal() +
theme(legend.position = "none")
rmarkdown::render(input = 'Scripts/Phos_Top5Bottom5_Tables.rmd',
output_file = paste0('TopAndBottom_Tables_',format(Sys.time(), '%Y%m%d'),'.docx'),
output_dir = 'Analysis/')
df %>%
mutate(nl =   apply(df[c("n.1.", "n.2.", "n.3.", "n.4.")], 1, paste,collapse="")) %>%
filter(ATOM == 'P') %>%
group_by(drug, compound, alphavalue) %>%
arrange(RMSD_MAP) %>%
summarise(n = n()) %>%
select(n < 2)
df %>%
mutate(nl =   apply(df[c("n.1.", "n.2.", "n.3.", "n.4.")], 1, paste,collapse="")) %>%
filter(ATOM == 'P') %>%
group_by(drug, compound, alphavalue) %>%
arrange(RMSD_MAP) %>% summarise(n = n()) %>% filter(n <2)
