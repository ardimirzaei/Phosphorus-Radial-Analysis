addCoef.col ='black',
tl.col = "black",
number.cex = 1.8,
cl.pos = 'n',
tl.srt = 0,
tl.cex = 1.2,
tl.offset = 1)
corrplot(as.data.frame(M),
# p.mat = testP,
# sig.level = 0.05,
method = 'circle',
# insig='blank',
addCoef.col ='black',
tl.col = "black",
number.cex = 1.8,
cl.pos = 'n',
tl.srt = 0,
tl.cex = 1.2,
tl.offset = 1)
M
str(M)
corrplot(as.data.frame(M)
)
M <- as.data.frame(cor(m)[c(1:2,4:5),3, drop=FALSE])
testP <- testRes$p[c(1:2,4:5),3, drop=FALSE]
M['Lower'] <-as.numeric(testRes$lowCI[c(1:2,4:5),3, drop=TRUE])
M['Upper'] <- as.numeric(testRes$uppCI[c(1:2,4:5),3, drop=TRUE])
M
M <- as.data.frame(cor(m)[c(1:2,4:5),3, drop=FALSE])
testP <- testRes$p[c(1:2,4:5),3, drop=FALSE]
M['Lower'] <-as.numeric(testRes$lowCI[c(1:2,4:5),3, drop=TRUE])
M['Upper'] <- as.numeric(testRes$uppCI[c(1:2,4:5),3, drop=TRUE])
colnames(M) <- c("$alpha-value", "Lower Confidence", "Upper Confidence")
rownames(M) <- c("Rf map", "RMSD Map", "Kappa", "Kappa'")
colnames(testP) <- colnames(M)
rownames(testP) <- rownames(M)
corrplot(M,
# p.mat = testP,
# sig.level = 0.05,
method = 'circle',
# insig='blank',
addCoef.col ='black',
tl.col = "black",
number.cex = 1.8,
cl.pos = 'n',
tl.srt = 0,
tl.cex = 1.2,
tl.offset = 1)
M
corrplot(as.matrix(M),
# p.mat = testP,
# sig.level = 0.05,
method = 'circle',
# insig='blank',
addCoef.col ='black',
tl.col = "black",
number.cex = 1.8,
cl.pos = 'n',
tl.srt = 0,
tl.cex = 1.2,
tl.offset = 1)
corrplot(as.matrix(M),
# p.mat = testP,
# sig.level = 0.05,
method = 'circle',
insig='blank',
addCoef.col ='black',
tl.col = "black",
number.cex = 1.8,
cl.pos = 'n',
tl.srt = 0,
tl.cex = 1.2,
tl.offset = 1)
corrplot(as.matrix(M),
p.mat = testP,
# sig.level = 0.05,
method = 'circle',
# insig='blank',
addCoef.col ='black',
tl.col = "black",
number.cex = 1.8,
cl.pos = 'n',
tl.srt = 0,
tl.cex = 1.2,
tl.offset = 1)
testP <- rep(testRes$p[c(1:2,4:5),3, drop=FALSE],3)
testP
testP <- testRes$p[c(1:2,4:5),3, drop=FALSE]
testP
M <- as.data.frame(cor(m)[c(1:2,4:5),3, drop=FALSE])
testP <- testRes$p[c(1:2,4:5),3, drop=FALSE]
testP['Lower'] <- testRes$p[c(1:2,4:5),3, drop=TRUE]
testP['Upper'] <- testRes$p[c(1:2,4:5),3, drop=TRUE]
M['Lower'] <-as.numeric(testRes$lowCI[c(1:2,4:5),3, drop=TRUE])
M['Upper'] <- as.numeric(testRes$uppCI[c(1:2,4:5),3, drop=TRUE])
colnames(M) <- c("$alpha-value", "Lower Confidence", "Upper Confidence")
rownames(M) <- c("Rf map", "RMSD Map", "Kappa", "Kappa'")
colnames(testP) <- colnames(M)
rownames(testP) <- rownames(M)
corrplot(as.matrix(M),
p.mat = testP,
# sig.level = 0.05,
method = 'circle',
# insig='blank',
addCoef.col ='black',
tl.col = "black",
number.cex = 1.8,
cl.pos = 'n',
tl.srt = 0,
tl.cex = 1.2,
tl.offset = 1)
testP
testP <- as.numeric(testRes$p[c(1:2,4:5),3, drop=FALSE])
testP['Lower'] <- testRes$p[c(1:2,4:5),3, drop=TRUE]
testP['Upper'] <- testRes$p[c(1:2,4:5),3, drop=TRUE]
M['Lower'] <-as.numeric(testRes$lowCI[c(1:2,4:5),3, drop=TRUE])
M['Upper'] <- as.numeric(testRes$uppCI[c(1:2,4:5),3, drop=TRUE])
colnames(M) <- c("$alpha-value", "Lower Confidence", "Upper Confidence")
rownames(M) <- c("Rf map", "RMSD Map", "Kappa", "Kappa'")
testP <- as.data.frame(testRes$p[c(1:2,4:5),3, drop=FALSE])
testP['Lower'] <- testRes$p[c(1:2,4:5),3, drop=TRUE]
testP['Upper'] <- testRes$p[c(1:2,4:5),3, drop=TRUE]
M['Lower'] <-as.numeric(testRes$lowCI[c(1:2,4:5),3, drop=TRUE])
M['Upper'] <- as.numeric(testRes$uppCI[c(1:2,4:5),3, drop=TRUE])
colnames(M) <- c("$alpha-value", "Lower Confidence", "Upper Confidence")
rownames(M) <- c("Rf map", "RMSD Map", "Kappa", "Kappa'")
colnames(testP) <- colnames(M)
rownames(testP) <- rownames(M)
corrplot(as.matrix(M),
p.mat = testP,
# sig.level = 0.05,
method = 'circle',
# insig='blank',
addCoef.col ='black',
tl.col = "black",
number.cex = 1.8,
cl.pos = 'n',
tl.srt = 0,
tl.cex = 1.2,
tl.offset = 1)
M <- as.data.frame(cor(m)[c(1:2,4:5),3, drop=FALSE])
testP <- as.data.frame(testRes$p[c(1:2,4:5),3, drop=FALSE])
testP['Lower'] <- testRes$p[c(1:2,4:5),3, drop=TRUE]
testP['Upper'] <- testRes$p[c(1:2,4:5),3, drop=TRUE]
M['Lower'] <-as.numeric(testRes$lowCI[c(1:2,4:5),3, drop=TRUE])
M['Upper'] <- as.numeric(testRes$uppCI[c(1:2,4:5),3, drop=TRUE])
colnames(M) <- c("$alpha-value", "Lower Confidence", "Upper Confidence")
rownames(M) <- c("Rf map", "RMSD Map", "Kappa", "Kappa'")
colnames(testP) <- colnames(M)
rownames(testP) <- rownames(M)
corrplot(as.matrix(M),
p.mat = testP,
# sig.level = 0.05,
method = 'circle',
# insig='blank',
addCoef.col ='black',
tl.col = "black",
number.cex = 1.8,
cl.pos = 'n',
tl.srt = 0,
tl.cex = 1.2,
tl.offset = 1)
corrplot(as.matrix(M),
p.mat = as.matrix(testP),
# sig.level = 0.05,
method = 'circle',
# insig='blank',
addCoef.col ='black',
tl.col = "black",
number.cex = 1.8,
cl.pos = 'n',
tl.srt = 0,
tl.cex = 1.2,
tl.offset = 1)
corrplot(as.matrix(M),
p.mat = as.matrix(testP),
sig.level = 0.05,
method = 'circle',
insig='blank',
addCoef.col ='black',
tl.col = "black",
number.cex = 1.8,
cl.pos = 'n',
tl.srt = 0,
tl.cex = 1.2,
tl.offset = 1)
corrplot(as.matrix(M),
p.mat = as.matrix(testP),
sig.level = 0.05,
method = 'circle',
insig='blank',
addCoef.col ='black',
tl.col = "black",
number.cex = 1.8,
cl.pos = 'n',
tl.srt = 25,
tl.cex = 1.2,
tl.offset = 1)
corrplot(as.matrix(M),
p.mat = as.matrix(testP),
number.digits = 3,
sig.level = 0.05,
method = 'circle',
insig='blank',
addCoef.col ='black',
tl.col = "black",
number.cex = 1.8,
cl.pos = 'n',
tl.srt = 25,
tl.cex = 1.2,
tl.offset = 1)
colnames(M) <- c("$alpha-value correlation", "Lower Confidence", "Upper Confidence")
rownames(M) <- c("Rf map", "RMSD Map", "Kappa", "Kappa'")
colnames(testP) <- colnames(M)
rownames(testP) <- rownames(M)
corrplot(as.matrix(M),
p.mat = as.matrix(testP),
number.digits = 3,
sig.level = 0.05,
method = 'circle',
insig='blank',
addCoef.col ='black',
tl.col = "black",
number.cex = 1.8,
cl.pos = 'n',
tl.srt = 25,
tl.cex = 1.2,
tl.offset = 1)
cat("Correlation Analysis tells us not really, but slightly")
colnames(M) <- c("'$alpha-value correlation'", "Lower Confidence", "Upper Confidence")
rownames(M) <- c("Rf map", "RMSD Map", "Kappa", "Kappa'")
colnames(testP) <- colnames(M)
rownames(testP) <- rownames(M)
corrplot(as.matrix(M),
p.mat = as.matrix(testP),
number.digits = 3,
sig.level = 0.05,
method = 'circle',
insig='blank',
addCoef.col ='black',
tl.col = "black",
number.cex = 1.8,
cl.pos = 'n',
tl.srt = 25,
tl.cex = 1.2,
tl.offset = 1)
colnames(M) <- c("$'alpha-value correlation'", "Lower Confidence", "Upper Confidence")
rownames(M) <- c("Rf map", "RMSD Map", "Kappa", "Kappa'")
colnames(testP) <- colnames(M)
rownames(testP) <- rownames(M)
corrplot(as.matrix(M),
p.mat = as.matrix(testP),
number.digits = 3,
sig.level = 0.05,
method = 'circle',
insig='blank',
addCoef.col ='black',
tl.col = "black",
number.cex = 1.8,
cl.pos = 'n',
tl.srt = 25,
tl.cex = 1.2,
tl.offset = 1)
colnames(M) <- c("$alpha-value", "Lower Confidence", "Upper Confidence")
rownames(M) <- c("Rf map", "RMSD Map", "Kappa", "Kappa'")
colnames(testP) <- colnames(M)
rownames(testP) <- rownames(M)
corrplot(as.matrix(M),
p.mat = as.matrix(testP),
number.digits = 3,
sig.level = 0.05,
method = 'circle',
insig='blank',
addCoef.col ='black',
tl.col = "black",
number.cex = 1.8,
cl.pos = 'n',
tl.srt = 25,
tl.cex = 1.2,
tl.offset = 1)
cat("Correlation Analysis tells us not really, but slightly")
mtext("Correlation of alpha value", at=2.5, line=-0.5, cex=2)
mtext("Correlation of alpha value", at=2.5, line=-3.5, cex=2)
mtext("Correlation of alpha value", at=2.5, line=3.5, cex=2)
corrplot(as.matrix(M),
p.mat = as.matrix(testP),
number.digits = 3,
sig.level = 0.05,
method = 'circle',
insig='blank',
addCoef.col ='black',
tl.col = "black",
number.cex = 1.8,
cl.pos = 'n',
tl.srt = 25,
tl.cex = 1.2,
tl.offset = 1)
mtext("Correlation of alpha value", at=2.5, line=3.5, cex=2)
corrplot(as.matrix(M),
p.mat = as.matrix(testP),
number.digits = 3,
sig.level = 0.05,
method = 'circle',
insig='blank',
addCoef.col ='black',
tl.col = "black",
number.cex = 1.8,
cl.pos = 'n',
tl.srt = 25,
tl.cex = 1.2,
tl.offset = 1,
mar=c(0,0,5,0))
mtext("Correlation of alpha value", at=2.5, line=3.5, cex=2)
mtext("Correlation of alpha value", at=2.5, line=-0.5, cex=2)
mtext("Correlation of alpha value", at=2.5, line=-0, cex=2)
corrplot(as.matrix(M),
p.mat = as.matrix(testP),
number.digits = 3,
sig.level = 0.05,
method = 'circle',
insig='blank',
addCoef.col ='black',
tl.col = "black",
number.cex = 1.8,
cl.pos = 'n',
tl.srt = 25,
tl.cex = 1.2,
tl.offset = 1,
mar=c(0,0,5,0))
mtext("Correlation of alpha value", at=2.5, line=-0, cex=2)
corrplot(as.matrix(M),
p.mat = as.matrix(testP),
number.digits = 3,
sig.level = 0.05,
method = 'circle',
insig='blank',
addCoef.col ='black',
tl.col = "black",
number.cex = 1.8,
cl.pos = 'n',
tl.srt = 25,
tl.cex = 1.2,
tl.offset = 1,
mar=c(0,0,4,0))
mtext("Correlation of alpha value", at=2.5, line=-0, cex=2)
mtext("Correlation of alpha value", at=2.5, line=0.2, cex=2)
corrplot(as.matrix(M),
p.mat = as.matrix(testP),
number.digits = 3,
sig.level = 0.05,
method = 'circle',
insig='blank',
addCoef.col ='black',
tl.col = "black",
number.cex = 1.8,
cl.pos = 'n',
tl.srt = 25,
tl.cex = 1.2,
tl.offset = 1,
mar=c(0,0,4,0))
mtext("Correlation of alpha value", at=2.5, line=0.2, cex=2)
mtext(bquote(hat(theta) == .(theta)))
mtext("Correlation of \\alpha value", at=2.5, line=0.2, cex=2)
mtext("Correlation of \alpha value", at=2.5, line=0.2, cex=2)
corrplot(as.matrix(M),
p.mat = as.matrix(testP),
number.digits = 3,
sig.level = 0.05,
method = 'circle',
insig='blank',
addCoef.col ='black',
tl.col = "black",
number.cex = 1.8,
cl.pos = 'n',
tl.srt = 25,
tl.cex = 1.2,
tl.offset = 1,
mar=c(0,0,4,0))
mtext("Correlation of \alpha value", at=2.5, line=0.2, cex=2)
mtext("Correlation of $\alpha$ value", at=2.5, line=0.2, cex=2)
corrplot(as.matrix(M),
p.mat = as.matrix(testP),
number.digits = 3,
sig.level = 0.05,
method = 'circle',
insig='blank',
addCoef.col ='black',
tl.col = "black",
number.cex = 1.8,
cl.pos = 'n',
tl.srt = 25,
tl.cex = 1.2,
tl.offset = 1,
mar=c(0,0,4,0))
mtext("Correlation of $\alpha$ value", at=2.5, line=0.2, cex=2)
mtext("Correlation of $\\alpha$ value", at=2.5, line=0.2, cex=2)
corrplot(as.matrix(M),
p.mat = as.matrix(testP),
number.digits = 3,
sig.level = 0.05,
method = 'circle',
insig='blank',
addCoef.col ='black',
tl.col = "black",
number.cex = 1.8,
cl.pos = 'n',
tl.srt = 25,
tl.cex = 1.2,
tl.offset = 1,
mar=c(0,0,4,0))
mtext("Correlation of $\\alpha$ value", at=2.5, line=0.2, cex=2)
mtext("Correlation of \$\\alpha\$ value", at=2.5, line=0.2, cex=2)
mtext("Correlation of alpha value", at=2.5, line=0.2, cex=2)
corrplot(as.matrix(M),
p.mat = as.matrix(testP),
number.digits = 3,
sig.level = 0.05,
method = 'circle',
insig='blank',
addCoef.col ='black',
tl.col = "black",
number.cex = 1.8,
cl.pos = 'n',
tl.srt = 25,
tl.cex = 1.2,
tl.offset = 1,
mar=c(0,0,4,0))
source('Scripts/Phos_Alpha_vs_RMSDS.R')
unique(df$alphavalue)
aov(Petal.Length ~ Species, df)
aov(RMSDS_MAP ~ alphavalue, df)
aov(RMSD_MAP ~ alphavalue, df)
library(psych)
describeBy(df$RMSD_MAP, df$alphavalue)
fit = aov(RMSD_MAP ~ alphavalue, df)
summary(fit)
cat("Levene's Test:\n")
leveneTest(RMSD_MAP~alphavalue,df)
library(car) #for leven's test
cat("Levene's Test:\n")
leveneTest(RMSD_MAP~alphavalue,df)
leveneTest(RMSD_MAP~as.factor(alphavalue),df)
fit = aov(RMSD_MAP ~ alphavalue, df)
summary(fit)
describeBy(df$RMSD_MAP, df$alphavalue)
# Control for n value
fit2 = aov(RMSD_MAP ~ alphavalue + n.1, df)
# Control for n value
fit2 = aov(RMSD_MAP ~ alphavalue + n.1., df)
Anova(fit2, type="III")
# Control for n value
fit2 = aov(RMSD_MAP ~ alphavalue + n.1. + n.2. + n.3. n.4., df)
Anova(fit2, type="III")
# Control for n value
fit2 = aov(RMSD_MAP ~ alphavalue + n.1. + n.2. + n.3. + n.4., df)
Anova(fit2, type="III")
summary(fit2)
ggplot(df,aes(y=RMSD_MAP, x=as.factor(alphavalue), fill=as.factor(alphavalue)))+
stat_summary(fun.y="mean", geom="bar",position="dodge")+
stat_summary(fun.data = mean_se, geom = "errorbar", position="dodge",width=.8)
ggplot(df,aes(y=RMSD_MAP, x=as.factor(alphavalue), fill=as.factor(alphavalue)))+
stat_summary(fun="mean", geom="bar",position="dodge")+
stat_summary(fun.data = mean_se, geom = "errorbar", position="dodge",width=.8)
ggplot(df,aes(y=RMSD_MAP, x=as.factor(alphavalue), fill=as.factor(alphavalue)))+
stat_summary(fun="mean", geom="bar",position="dodge")+
stat_summary(fun.data = mean_se, geom = "errorbar", position="dodge",width=.8) +
ylim(c(0.03,0.04))
ggplot(df,aes(y=RMSD_MAP, x=as.factor(alphavalue), fill=as.factor(alphavalue)))+
stat_summary(fun="mean", geom="bar",position="dodge")+
stat_summary(fun.data = mean_se, geom = "errorbar", position="dodge",width=.8) +
coord_cartesian(ylim(c(0.03,0.04)))
ggplot(df,aes(y=RMSD_MAP, x=as.factor(alphavalue), fill=as.factor(alphavalue)))+
stat_summary(fun="mean", geom="bar",position="dodge")+
stat_summary(fun.data = mean_se, geom = "errorbar", position="dodge",width=.8) +
coord_cartesian(ylim = c(0.03,0.04))
ggplot(df,aes(y=RMSD_MAP, x=as.factor(alphavalue), fill=as.factor(alphavalue)))+
stat_summary(fun="mean", geom="bar",position="dodge")+
stat_summary(fun.data = mean_se, geom = "errorbar", position="dodge",width=.8) +
coord_cartesian(ylim = c(0.0375,0.04))
ggplot(df,aes(y=RMSD_MAP, x=as.factor(alphavalue), fill=as.factor(alphavalue)))+
stat_summary(fun="mean", geom="bar",position="dodge")+
stat_summary(fun.data = mean_se, geom = "errorbar", position="dodge",width=.8) +
coord_cartesian(ylim = c(0.038,0.0385))
ggplot(df,aes(y=RMSD_MAP, x=as.factor(alphavalue), fill=as.factor(alphavalue)))+
stat_summary(fun="mean", geom="bar",position="dodge")+
stat_summary(fun.data = mean_se, geom = "errorbar", position="dodge",width=.8) +
coord_cartesian(ylim = c(0.0382,0.0384))
ggplot(df,aes(y=RMSD_MAP, x=as.factor(alphavalue), fill=as.factor(alphavalue)))+
stat_summary(fun="mean", geom="bar",position="dodge")+
stat_summary(fun.data = mean_se, geom = "errorbar", position="dodge",width=.8) +
coord_cartesian(ylim = c(0.0382,0.0384)) +
xlab("Alpha Value")
ggplot(df,aes(y=RMSD_MAP, x=as.factor(alphavalue), fill=as.factor(alphavalue)))+
stat_summary(fun="mean", geom="bar",position="dodge")+
stat_summary(fun.data = mean_se, geom = "errorbar", position="dodge",width=.8) +
coord_cartesian(ylim = c(0.0382,0.0384)) +
xlab("Alpha Value") +
element_text() +
theme_minimal()
ggplot(df,aes(y=RMSD_MAP, x=as.factor(alphavalue), fill=as.factor(alphavalue)))+
stat_summary(fun="mean", geom="bar",position="dodge")+
stat_summary(fun.data = mean_se, geom = "errorbar", position="dodge",width=.8) +
coord_cartesian(ylim = c(0.0382,0.0384)) +
xlab("Alpha Value") +
theme_minimal() +
theme(legend.position = "none")
fit = aov(RMSD_MAP ~ as.factor(alphavalue), df)
summary(fit)
# Control for n value
fit2 = aov(RMSD_MAP ~ as.factor(alphavalue) + n.1. + n.2. + n.3. + n.4., df)
Anova(fit2, type="III")
summary(fit2)
