setwd("D:/Code/PhosphateAnalysis")
rank(c(1, 1, 3,5,3,14,32,2,1))
jnk = c(1, 1, 3,5,3,14,32,2,1)
rank(jnk)
rank(-jnk)
min_rank(jnk)
dense_rank(jnk)
dplyr::dense_rank(jnk)
dplyr::min_rank(jnk)
source('Scripts/Phos_Load_and_Preprocess.R')
source('Scripts/Phos_Alpha_vs_RMSD.R')
library(corrplot)
library(ggplot2)
library(dplyr)
library(psych) # for describeby
library(car) #for leven's test
library(flextable)
# devtools::install_github("davidgohel/officedown")
library(officedown)
source('Scripts/Phos_Load_and_Preprocess.R')
source('Scripts/Phos_Alpha_vs_RMSD.R')
df %>%
mutate(nl =   apply(df[c("n.1.", "n.2.", "n.3.", "n.4.")], 1, paste,collapse="")) %>%
filter(ATOM == 'P') %>%
group_by(drug, compound, alphavalue) %>%
arrange(RMSD_MAP) %>%
min_rank(RMSD_MAP) %>%
slice(1:5) %>%
select(drug, compound, alphavalue, nl, RMSD_MAP) %>%
flextable() %>%
theme_box() %>%
merge_v(j = c('drug', 'compound', 'alphavalue'))
df %>%
mutate(nl =   apply(df[c("n.1.", "n.2.", "n.3.", "n.4.")], 1, paste,collapse="")) %>%
filter(ATOM == 'P') %>%
group_by(drug, compound, alphavalue) %>%
arrange(RMSD_MAP) %>%
mutate(rank = min_rank(RMSD_MAP)) %>%
slice(1:5) %>%
select(drug, compound, alphavalue, nl, rank, RMSD_MAP)
df %>%
mutate(nl =   apply(df[c("n.1.", "n.2.", "n.3.", "n.4.")], 1, paste,collapse="")) %>%
filter(ATOM == 'P') %>%
group_by(drug, compound, alphavalue) %>%
arrange(RMSD_MAP) %>%
mutate(rank = min_rank(RMSD_MAP)) %>%
slice(1:5) %>%
filter(nl == '6666')
df %>%
mutate(nl =   apply(df[c("n.1.", "n.2.", "n.3.", "n.4.")], 1, paste,collapse="")) %>%
filter(ATOM == 'P') %>%
group_by(drug, compound, alphavalue) %>%
arrange(RMSD_MAP) %>%
mutate(rank = min_rank(RMSD_MAP)) %>%
slice(1:5) %>%
filter(nl == '6666') %>%
select(drug, compound, alphavalue, nl, rank, RMSD_MAP)
df %>%
mutate(nl =   apply(df[c("n.1.", "n.2.", "n.3.", "n.4.")], 1, paste,collapse="")) %>%
filter(ATOM == 'P') %>%
group_by(drug, compound, alphavalue) %>%
arrange(RMSD_MAP) %>%
mutate(rank = min_rank(RMSD_MAP)) %>%
slice(1:5) %>%
filter(nl == '6666' | nl == '6677' ) %>%
select(drug, compound, alphavalue, nl, rank, RMSD_MAP) %>%
flextable() %>%
theme_box() %>%
merge_v(j = c('drug', 'compound', 'alphavalue'))
df %>%
mutate(nl =   apply(df[c("n.1.", "n.2.", "n.3.", "n.4.")], 1, paste,collapse="")) %>%
filter(ATOM == 'P') %>%
group_by(drug, compound, alphavalue) %>%
arrange(RMSD_MAP) %>%
mutate(rank = min_rank(RMSD_MAP)) %>%
# slice(1:5) %>%
filter(nl == '6666' | nl == '6677' ) %>%
select(drug, compound, alphavalue, nl, rank, RMSD_MAP) %>%
flextable() %>%
theme_box() %>%
merge_v(j = c('drug', 'compound', 'alphavalue'))
df %>%
mutate(nl =   apply(df[c("n.1.", "n.2.", "n.3.", "n.4.")], 1, paste,collapse="")) %>%
filter(ATOM == 'P') %>%
group_by(drug, compound, alphavalue) %>%
arrange(RMSD_MAP) %>%
mutate(rank = min_rank(RMSD_MAP)) %>%
# slice(1:5) %>%
filter(nl == '6677' ) %>%
select(drug, compound, alphavalue, nl, rank, RMSD_MAP) %>%
flextable() %>%
theme_box() %>%
merge_v(j = c('drug', 'compound', 'alphavalue'))
df['nl']
unique(df['nl'])
unique(df$n.4.)
df$n.4.==7
df$n.3.==7&df$n.4.==7
unique(df$n.3.)
# Ranking of nl = 6666 and 6677
rmarkdown::render(input = 'Scripts/Phos_Rankings_6666_6677.rmd',
output_file = paste0('Rankings_6666_6677_',format(Sys.time(), '%Y%m%d'),'.docx'),
output_dir = 'Analysis/')
# Ranking of nl = 6666 and 6677
rmarkdown::render(input = 'Scripts/Phos_Rankings_6666_6677.rmd',
output_file = paste0('Rankings_6666_6677_',format(Sys.time(), '%Y%m%d'),'.docx'),
output_dir = 'Analysis/')
df %>%
mutate(nl =   apply(df[c("n.1.", "n.2.", "n.3.", "n.4.")], 1, paste,collapse="")) %>%
filter(ATOM == 'P') %>%
group_by(drug, compound, alphavalue) %>%
arrange(RMSD_MAP) %>%
mutate(rank = min_rank(RMSD_MAP)) %>%
# slice(1:5) %>%
filter(nl == '6666' | nl == '6677' ) %>%
select(drug, compound, alphavalue, nl, rank, RMSD_MAP) %>%
flextable() %>%
theme_box() %>%
merge_v(j = c('drug', 'compound'))
View(df)
df = read.csv('File_Outputs/Full_DataFrame_nl_Atoms.csv')
source('Scripts/Phos_Load_and_Preprocess.R')
df = read.csv('File_Outputs/Full_DataFrame_nl_Atoms.csv')
table(nl)
table(df$n.0.)
table(df$n.1.)
table(df$n.2.)
table(df$n.3.)
table(df$n.4.)
